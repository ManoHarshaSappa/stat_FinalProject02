{"title":"Final Project","markdown":{"yaml":{"title":"Final Project","format":{"html":{"toc":true,"number-sections":true,"css":"styles.css"}},"editor":"visual","output":{"html_document":{"code_folding":"hide"}}},"headingText":"Stat-515-002 (Spring 2024)","containsRefs":false,"markdown":"\n\n\n***Group Number: 14***\n\n## What is Project based on?\n\n::: {style=\"text-align:justify\"}\nOur project revolves around a thorough examination of a dataset documenting motor vehicle collisions on county and local roadways within Montgomery County, Maryland. This dataset serves as the cornerstone for our investigation into the myriad factors that influence traffic accidents and their consequences. Through meticulous analysis and advanced statistical techniques, we aim to uncover insightful patterns and correlations that can inform proactive measures for enhancing road safety and mitigating accident risks.\n\nIn our endeavor, we transcend conventional data exploration by incorporating hypothesis testing and predictive modeling methodologies. By formulating and testing hypotheses pertaining to weather conditions, daylight, injury severity, vehicle types, distractions, and traffic control measures, we strive to unveil underlying relationships and trends within the data. Additionally, our predictive modeling efforts seek to anticipate injury severity and vehicle damage extent based on a diverse set of variables including collision type, vehicle movement, and speed limit. Through this comprehensive approach, our project aspires to deliver actionable insights that can empower stakeholders in making informed decisions aimed at fostering safer road environments and reducing the occurrence of motor vehicle collisions.\n:::\n\n## Whatâ€™s our Goal?\n\n::: {style=\"text-align:justify\"}\nOur goal is to deeply understand why and how motor vehicle collisions happen in Montgomery County, Maryland. By analyzing a vast amount of data on these accidents, we aim to uncover patterns, trends, and correlations that shed light on the factors contributing to crashes. Through this exploration, we seek to identify key variables such as weather conditions, road surfaces, vehicle types, and driver behaviors that play significant roles in accident occurrence and severity.\n\nUltimately, our aim is to use this knowledge to inform strategies and interventions that can enhance road safety and reduce the frequency and severity of motor vehicle collisions. By providing insights into the root causes and contributing factors of accidents, we aspire to empower policymakers, law enforcement agencies, and community stakeholders with the information they need to implement effective measures for preventing accidents and safeguarding lives on the roads of Montgomery County.\n:::\n\n## Research Questions : \n\n## Visualization1 : What are the trends in the frequency of car crashes over years?\n\n```{r ,message = FALSE ,echo=FALSE}\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read data and remove missing values\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data)\n\n# Convert Crash_Date to a Date format\ndata$Crash_Date <- as.Date(data$Crash.Date.Time, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Extract year from Crash_Date\ndata$Year <- format(data$Crash_Date, \"%Y\")\n\n# Group the data by year and count the number of crashes\nyearly_crash_count <- data %>%\n  group_by(Year) %>%\n  summarise(Num_Crashes = n())\n\n# Provided data\nyearly_crash_data <- data.frame(\n  Year = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\"),\n  Num_Crashes = c(20268, 21783, 21537, 21035, 20943, 13798, 16210, 17577, 18913, 7))\n\nplotly::plot_ly(yearly_crash_data, x = ~Year, y = ~Num_Crashes, type = 'bar', marker = list(color = 'rgb(139, 0, 0)')) %>%\n  plotly::layout(title = \"Crash Frequency per Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Number of Crashes\", tickformat = \",\"),\n         xaxis2 = list(tickangle = 45, tickmode = 'linear'))\n```\n\n<details>\n\n<summary>Code</summary>\n\n```{r ,message = FALSE}\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read data and remove missing values\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data)\n\n# Convert Crash_Date to a Date format\ndata$Crash_Date <- as.Date(data$Crash.Date.Time, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Extract year from Crash_Date\ndata$Year <- format(data$Crash_Date, \"%Y\")\n\n# Group the data by year and count the number of crashes\nyearly_crash_count <- data %>%\n  group_by(Year) %>%\n  summarise(Num_Crashes = n())\n\n# Provided data\nyearly_crash_data <- data.frame(\n  Year = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\"),\n  Num_Crashes = c(20268, 21783, 21537, 21035, 20943, 13798, 16210, 17577, 18913, 7))\n\nplot1 = plot_ly(yearly_crash_data, x = ~Year, y = ~Num_Crashes, type = 'bar', marker = list(color = 'rgb(139, 0, 0)')) %>%\n  layout(title = \"Crash Frequency per Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Number of Crashes\", tickformat = \",\"),\n         xaxis2 = list(tickangle = 45, tickmode = 'linear'))\n#plot1\n```\n\n</details>\n\n<details>\n\n<summary>Columns Used</summary>\n\n**Columns Used:**\n\n-   **`Crash_Date`**:\n\n    -   **Rationale for Use**: The specific date and time of each crash incident are crucial for temporal analysis and trend identification.\n\n-   **`Year`** (Derived from **`Crash_Date`**):\n\n    -   **Rationale for Use**: Grouping the data by year enables the identification of yearly patterns and trends in crash occurrences.\n\n-   **`Num_Crashes`** (Derived from counting the number of records for each year):\n\n    -   **Rationale for Use**: Quantifying the crash frequency provides a clear measure for understanding the magnitude of road accidents over time.\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Explanation of the Code:** This visualizes the frequency of crashes per year using ggplot2 in R. Initially, it converts the \"Crash_Date\" column into a date format and extracts the year from it. Then, it groups the data by year and calculates the number of crashes that occurred each year.\n:::\n\n## hypo#1. is there any relation between weather condition, day light and injury severity\n\nThe code you provided performs a chi-square test of independence to determine whether there is a statistically significant association between weather condition, light condition, and injury severity in traffic accidents. Here's an explanation of why this test was conducted and what was observed:\n\n**Chi-Square Test of Independence**: The chi-square test is a statistical test used to determine whether there is a significant association between two categorical variables. In this case, the variables of interest are weather condition, light condition, and injury severity.\n\n**Observation**: By analyzing the contingency table generated from the data, which shows the frequency distribution of the combinations of weather condition, light condition, and injury severity, we can observe the following:\n\n-   The contingency table provides counts of the number of accidents for each combination of weather condition, light condition, and injury severity.\n\n-   The chi-square test is then applied to assess whether these variables are independent of each other or if there is a relationship between them.\n\n![](images/h1.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Contingency table of Weather, Light, and Injury Severity\ncontingency_table <- table(data$Weather, data$Light, data$Injury.Severity)\n\n# Remove any empty dimensions\ncontingency_table <- margin.table(contingency_table, c(1, 2))\n\n\n# Chi-square test of independence\nchi_square_test <- chisq.test(contingency_table)\n\n# Print the test results\nprint(chi_square_test)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question is asking if there's any relationship between weather conditions, daylight, and injury severity in accidents. To analyze this, a Pearson's Chi-squared test was conducted on the contingency table. The output indicates a significant relationship between these variables, with a very low p-value (p \\< 2.2e-16). This suggests that the observed frequencies of injury severity across different weather conditions and daylight statuses are unlikely to have occurred by chance alone, indicating a strong association between these factors.\n:::\n\n\n## Per#1: Can we predict the severity of injuries based on various factors such as weather conditions, road surface conditions, and collision type?\n\n#### Fit random forest model\n\n![](images/1%20model.png)\n\n\\####\n\n<details>\n\n<summary>Random Forest Model Code</summary>\n\n```{r,message = FALSE}\nselect_cols=c('Weather','Surface.Condition','Collision.Type','Injury.Severity')\ninjury_data = data[select_cols]\n\ninjury_data = injury_data[complete.cases(injury_data), ]\n\n```\n\n```{r,message = FALSE}\ninjury_data[injury_data == 'N/A'] = NA\n\ninjury_data = na.omit(injury_data)\n\n## print(sum(is.na(injury_data)))\n\n```\n\n```{r,message = FALSE}\ninjury_data[injury_data == ''] = NA\n\ninjury_data = na.omit(injury_data)\n\n## print(sum(is.na(injury_data)))\n\n```\n\n```{r,message = FALSE}\ninjury_data$Weather <- factor(injury_data$Weather)\ninjury_data$Surface.Condition <- factor(injury_data$Surface.Condition)\ninjury_data$Collision.Type <- factor(injury_data$Collision.Type)\ninjury_data$Injury.Severity <- factor(injury_data$Injury.Severity)\n```\n\n```{r,message = FALSE}\n# Load required library\nlibrary(randomForest)\nlibrary(caret)\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Split the data into training and testing sets\ntrain_indices <- createDataPartition(injury_data$Injury.Severity, p = 0.8, list = FALSE)\ntrain_data <- injury_data[train_indices, ]\ntest_data <- injury_data[-train_indices, ]\n# train_data\n# Fit random forest model\nrmodel <- randomForest(Injury.Severity ~ ., data = train_data, ntree = 500)\nprint(rmodel)\n```\n\n```{r,message = FALSE}\npredictions <- predict(rmodel, newdata = test_data)\n\n# Create confusion matrix\nconf_matrix <- table(predictions, test_data$Injury.Severity)\n\n# Calculate accuracy\naccuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)\n\n# Calculate precision\nprecision <- diag(conf_matrix) / rowSums(conf_matrix)\n\n# Calculate recall\nrecall <- diag(conf_matrix) / colSums(conf_matrix)\n\n# Calculate F1-score\nf1_score <- 2 * precision * recall / (precision + recall)\n\n# Print accuracy, precision, recall, and F1-score\n# print(paste(\"Accuracy:\", accuracy))\n# print(\"Precision:\")\n# print(precision)\n# print(\"Recall:\")\n# print(recall)\n# print(\"F1-score:\")\n# print(f1_score)\n\n# Print confusion matrix\n# print(\"Confusion Matrix:\")\n# print(conf_matrix)\n```\n\n```{r ,message = FALSE}\n# Evaluate the model using confusion matrix\nconf_matrix <- table(test_data$Injury.Severity, predictions)\n\n# Calculate accuracy\naccuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)\n\n# Print accuracy\n# print(paste(\"Accuracy:\", accuracy))\n```\n\n```{r ,message = FALSE}\nimportance(rmodel)\n```\n\n```{r ,message = FALSE}\nvarImpPlot(rmodel)\n```\n\n</details>\n\n### Accuracy\n\n![](images/2.png)\n\n### Precision\n\n![](images/3%20.png)\n\n### Recall\n\n![](images/9.png)\n\n### f1_score\n\n![](images/4.png)\n\n### Confusion Matrix\n\n![](images/5.png)\n\n### Importance model\n\n![](images/6.png)\n\n### Graph:\n\n![](images/7.png)\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question aims to predict the severity of injuries resulting from collisions based on various factors such as weather conditions, road surface conditions, and collision types. The output is from a random forest classification model trained on a dataset (train_data). The model's accuracy is approximately 80.69%, indicating its ability to predict injury severity.\n\nThe confusion matrix shows how well the model predicts each class of injury severity. Precision, recall, and F1-score metrics provide further insight into the model's performance for each class. However, for certain classes like \"FATAL INJURY\", precision, recall, and F1-score are not defined (NaN), indicating that the model did not correctly predict any instances of that class.\n\nThe confusion matrix reveals the number of correct and incorrect predictions for each class. Additionally, the importance of variables in predicting injury severity is shown through MeanDecreaseGini values. In this case, \"Collision.Type\" has the highest importance, followed by \"Weather\" and \"Surface.Condition\".\n\nOverall, the output suggests that weather conditions, road surface conditions, and collision types are significant factors in predicting the severity of injuries resulting from collisions, with \"Collision.Type\" being the most important predictor.\n:::\n\n## visualization3 : Top 10 cars which involve in car cashes?\n\n```{r ,message = FALSE, echo=FALSE}\nvehicle_counts <- data %>%\n  group_by(Vehicle.Make) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) # Sort by count in descending order\n\n# Take the top N most common vehicle makes for better visualization\ntop_n <- 10 # You can adjust this value as needed\n\ntop_vehicle_counts <- vehicle_counts %>%\n  top_n(top_n, count)\n\n# Your data processing code remains unchanged\n# Plotting\nplot_ly(top_vehicle_counts, y = ~reorder(Vehicle.Make, count), x = ~count, type = 'bar', marker = list(color = 'skyblue')) %>%\n  layout(title = \"Top 10 Most Common Vehicle Makes in Accidents\",\n         xaxis = list(title = \"Vehicle Make\", tickfont = list(size = 14)),\n         yaxis = list(title = \"Number of Accidents\", tickfont = list(size = 14)),\n         margin = list(l = 50, r = 50, b = 100, t = 100),  # Adjust margins\n         barmode = 'group')\n```\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\nvehicle_counts <- data %>%\n  group_by(Vehicle.Make) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) # Sort by count in descending order\n\n# Take the top N most common vehicle makes for better visualization\ntop_n <- 10 # You can adjust this value as needed\n\ntop_vehicle_counts <- vehicle_counts %>%\n  top_n(top_n, count)\n\n# Your data processing code remains unchanged\n# Plotting\nplot2 = plot_ly(top_vehicle_counts, y = ~reorder(Vehicle.Make, count), x = ~count, type = 'bar', marker = list(color = 'skyblue')) %>%\n  layout(title = \"Top 10 Most Common Vehicle Makes in Accidents\",\n         xaxis = list(title = \"Vehicle Make\", tickfont = list(size = 14)),\n         yaxis = list(title = \"Number of Accidents\", tickfont = list(size = 14)),\n         margin = list(l = 50, r = 50, b = 100, t = 100),  # Adjust margins\n         barmode = 'group')\n#plot2\n```\n\n</details>\n\n<details>\n\n<summary>Columns Used</summary>\n\n**Columns Used:**\n\n-   **Vehicle.Make**: This column is used to group the data by vehicle make, as we want to count the number of accidents for each vehicle make.\n\n-   **count**: This column is created using **`summarise()`** to count the number of accidents for each vehicle make group. It represents the frequency of accidents for each vehicle make.\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Explanation of the Code:** This generates a bar plot showing the top 10 most common vehicle makes involved in accidents, with vehicle make names on the y-axis and the number of accidents on the x-axis. It uses dplyr to summarize and arrange the data, then ggplot2 for visualization.\n:::\n\n\n## hypo#2. Are certain types of vehicles more likely to be involved in collisions at night compared to during the day?\n\nThe code aims to determine whether certain types of vehicles are more likely to be involved in collisions at night compared to during the day. Here's a clear interpretation of the analysis:\n\n1.  **Subset Data**: The dataset is divided into two subsets: collisions occurring during the day (**`collisions_day`**) and collisions occurring at night with lights on (**`collisions_night`**).\n\n2.  **Count Vehicle Types**: Counts of each vehicle type involved in collisions are calculated separately for day and night collisions.\n\n**Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant association between vehicle types and the time of the collision (day or night).\n\n![](images/h2.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Subset data for collisions during the day and at night\ncollisions_day <- subset(data, Light == \"DAYLIGHT\")\ncollisions_night <- subset(data, Light == \"DARK LIGHTS ON\")\n\n# Get the counts of each vehicle type for day and night collisions\ncounts_day <- table(collisions_day$Vehicle.Body.Type)\ncounts_night <- table(collisions_night$Vehicle.Body.Type)\n\n# Perform chi-square test of independence\nchi_square_test <- chisq.test(counts_day, counts_night)\n\n# Print the test results\nprint(chi_square_test)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question is investigating whether certain types of vehicles are more prone to being involved in collisions at night compared to during the day. To analyze this, a Pearson's Chi-squared test was conducted comparing the counts of collisions involving different types of vehicles during the day and at night. The output indicates that there is no significant difference in the distribution of collisions across different types of vehicles between day and night, with a p-value of 0.2408. This suggests that the likelihood of different types of vehicles being involved in collisions is similar during both day and night.\n:::\n\n## hypo#3. Do drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors?\n\nThe analysis aims to determine whether drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors. Here's a clear interpretation of the results:\n\n1.  **Data Subset**: The dataset is divided into two subsets: one for drivers distracted by electronic devices (**`electronic_distracted`**) and another for drivers distracted by other factors (**`other_distracted`**).\n\n2.  **Count Collisions**: The number of collisions is counted separately for drivers distracted by electronic devices and those distracted by other factors.\n\n3.  **Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant difference in collision rates between the two groups of drivers.\n\n![](images/h3.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Subset the data for drivers distracted by electronic devices\nelectronic_distracted <- subset(data, Driver.Distracted.By == \"ELECTRONIC DEVICE\")\n\n# Subset the data for drivers distracted by other factors\nother_distracted <- subset(data, Driver.Distracted.By != \"ELECTRONIC DEVICE\" & Driver.Distracted.By != \"NOT DISTRACTED\")\n\n# Count the number of collisions for each distraction type\ncounts_electronic <- nrow(electronic_distracted)\ncounts_other <- nrow(other_distracted)\n\n# Perform chi-square test\nchi_square_test <- chisq.test(c(counts_electronic, counts_other))\n\n# Print the test results\nprint(chi_square_test)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question aims to determine if drivers distracted by electronic devices have a higher collision rate compared to those distracted by other factors. To analyze this, a Chi-squared test was conducted comparing the collision counts between drivers distracted by electronic devices and those distracted by other factors. The output indicates a significant difference between the two groups, with a very low p-value (p \\< 2.2e-16). This suggests that drivers distracted by electronic devices indeed have a significantly higher collision rate compared to those distracted by other factors.\n:::\n\n## visualization2 : How does the distribution of car accidents vary geographically?\n\n```{r ,message = FALSE,echo=FALSE}\nlibrary(leaflet)\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data) \nmap <- leaflet(data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    popup = ~as.character(Report.Number),\n    label = ~as.character(Report.Number)\n  )\n\n# Print the map\nmap\n```\n\n<details>\n\n<summary>Code</summary>\n\n```{r}\nlibrary(leaflet)\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data) \nmap <- leaflet(data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    popup = ~as.character(Report.Number),\n    label = ~as.character(Report.Number)\n  )\n\n# Print the map\n# map\n```\n\n</details>\n\n<details>\n\n<summary>Columns Used</summary>\n\n**Columns Used:**\n\n-   **Longitude:** Longitude coordinates are essential for accurately positioning each incident on the map.\n\n-   **Latitude:** Latitude coordinates complement longitude for precise incident mapping.\n\n-   **Report.Number:** Each incident is uniquely identified by a report number, facilitating individual incident reference and tracking.\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Explanation of the Code:** This utilizes the Leaflet package in R to generate an interactive map. It begins by loading Leaflet and then initializes a map object. Using latitude and longitude data from a dataframe named 'data', it places circle markers on the map to represent specific locations, like crash sites. Each marker includes a popup and label showing the associated report number. Finally, it prints the interactive map, allowing users to explore the locations and corresponding report numbers within the R environment.\n:::\n\n## per#2: Can we predict the extent of vehicle damage in collisions based on collision type, vehicle movement, and speed limit?\n\n### Accuracy :\n\n![](images/WhatsApp%20Image%202024-05-03%20at%2011.24.47%20AM.jpeg){fig-align=\"center\"} \\###\n\n### Precision : ![](images/WhatsApp%20Image%202024-05-03%20at%2011.58.44%20AM.jpeg)\n\n### Recall : ![](images/WhatsApp%20Image%202024-05-03%20at%2011.58.44%20AM%20(1).jpeg)\n\n### F1_score : ![](images/WhatsApp%20Image%202024-05-03%20at%2011.58.43%20AM.jpeg)\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\nlibrary(randomForest)\nlibrary(caret)\n\n# Assuming your dataset is named 'data'\n\n# Select relevant columns for modeling\nselected_cols <- c(\"Collision.Type\", \"Vehicle.Movement\", \"Speed.Limit\", \"Vehicle.Damage.Extent\")\n\n# Subset the data\nvehicle_damage <- data[selected_cols]\nvehicle_damage=na.omit(vehicle_damage)\n\nvehicle_damage[vehicle_damage == \"N/A\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\n# Replace blank values with NA\nvehicle_damage[vehicle_damage == \"\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\nvehicle_damage$Collision.Type <- as.factor(vehicle_damage$Collision.Type)\nvehicle_damage$Vehicle.Movement <- as.factor(vehicle_damage$Vehicle.Movement)\nvehicle_damage$Vehicle.Damage.Extent <- as.factor(vehicle_damage$Vehicle.Damage.Extent)\n\nset.seed(123)  # For reproducibility\ntrain_indices <- createDataPartition(vehicle_damage$Vehicle.Damage.Extent, p = 0.8, list = FALSE)\ntrain_data <- vehicle_damage[train_indices, ]\ntest_data <- vehicle_damage[-train_indices, ]\n\nlibrary('rpart')\n# Train the decision tree model\nd_model <- rpart(Vehicle.Damage.Extent ~ ., data = train_data, method = \"class\")\n\n# Make predictions on the test set\npredictions <- predict(d_model, newdata = test_data, type = \"class\")\n\n# Calculate accuracy\naccuracy <- mean(predictions == test_data$Vehicle.Damage.Extent)\n\n# Calculate precision, recall, and F1-score using the confusion matrix\nconf_matrix <- table(predictions, test_data$Vehicle.Damage.Extent)\nprecision <- diag(conf_matrix) / rowSums(conf_matrix)\nrecall <- diag(conf_matrix) / colSums(conf_matrix)\nf1_score <- 2 * precision * recall / (precision + recall)\n\nprint(paste(\"Accuracy:\", accuracy))\nprint(\"Precision:\")\nprint(precision)\nprint(\"Recall:\")\nprint(recall)\nprint(\"F1-score:\")\nprint(f1_score)\n\n# Print confusion matrix\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\n```\n\n</details>\n\n### Graph :\n\n![](images/pd2.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\nlibrary('rpart.plot')\nprp(d_model, type = 2, extra = 1, branch = 0.6)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The output shows the performance of a model that predicts the extent of vehicle damage in collisions. It's about 45% accurate overall. The model is better at predicting certain types of damage, like \"DISABLING,\" but not so good at others, like \"DESTROYED\" or \"NO DAMAGE.\" The confusion matrix gives details on predictions versus actual outcomes. The most crucial factors for prediction are collision type, vehicle movement, and speed limit. Collision type is the most important, followed by vehicle movement and speed limit.\n:::\n\n## hypo#4: Can we determine the effectiveness of different traffic control measures (Traffic.Control) in reducing collision rates? Which types of traffic controls are most effective in preventing collisions?\n\n![](images/h4.png){width=\"1000\"}\n\n### Graph :\n\n![](images/hy4.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Subset the dataset to include only the required columns\ntraffic_data <- data[, c(\"Traffic.Control\", \"Injury.Severity\")]\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\ntraffic_data[traffic_data == \"N/A\"] <- NA\n\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\n# Check if there are any missing values left\nprint(sum(is.na(traffic_data)))\ncollision_counts <- traffic_data %>%\n  group_by(Traffic.Control) %>%\n  summarise(Collision_Count = n())\n\n# Calculate collision rates for each traffic control type\ntotal_collisions <- nrow(traffic_data)\ncollision_rates <- collision_counts %>%\n  mutate(Collision_Rate = Collision_Count / total_collisions)\n\n# Statistical Analysis\n# Perform chi-square test to compare collision rates between different traffic controls\nchi_square_test <- chisq.test(traffic_data$Traffic.Control, traffic_data$Injury.Severity)\n\n# Visualization\npar(mfrow=c(1, 2))  # Set up a 1x2 plotting grid\n\n# Create a bar plot using ggplot2\nggplot(collision_counts, aes(x = reorder(Traffic.Control, -Collision_Count), y = Collision_Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Collision Counts by Traffic Control Type\",\n       x = \"Traffic Control Type\",\n       y = \"Collision Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question investigates whether different types of traffic control measures are effective in reducing collision rates and which ones are most effective. To analyze this, a Pearson's Chi-squared test was conducted between the types of traffic control measures and the severity of injuries resulting from collisions. The output shows a significant relationship between the two variables, with a very low p-value (p \\< 2.2e-16). This suggests that the effectiveness of traffic control measures in preventing collisions varies significantly across different types. However, further analysis would be needed to determine which specific types of traffic controls are most effective in reducing collision rates and severity of injuries.\n:::\n","srcMarkdownNoYaml":"\n\n#### Stat-515-002 (Spring 2024)\n\n***Group Number: 14***\n\n## What is Project based on?\n\n::: {style=\"text-align:justify\"}\nOur project revolves around a thorough examination of a dataset documenting motor vehicle collisions on county and local roadways within Montgomery County, Maryland. This dataset serves as the cornerstone for our investigation into the myriad factors that influence traffic accidents and their consequences. Through meticulous analysis and advanced statistical techniques, we aim to uncover insightful patterns and correlations that can inform proactive measures for enhancing road safety and mitigating accident risks.\n\nIn our endeavor, we transcend conventional data exploration by incorporating hypothesis testing and predictive modeling methodologies. By formulating and testing hypotheses pertaining to weather conditions, daylight, injury severity, vehicle types, distractions, and traffic control measures, we strive to unveil underlying relationships and trends within the data. Additionally, our predictive modeling efforts seek to anticipate injury severity and vehicle damage extent based on a diverse set of variables including collision type, vehicle movement, and speed limit. Through this comprehensive approach, our project aspires to deliver actionable insights that can empower stakeholders in making informed decisions aimed at fostering safer road environments and reducing the occurrence of motor vehicle collisions.\n:::\n\n## Whatâ€™s our Goal?\n\n::: {style=\"text-align:justify\"}\nOur goal is to deeply understand why and how motor vehicle collisions happen in Montgomery County, Maryland. By analyzing a vast amount of data on these accidents, we aim to uncover patterns, trends, and correlations that shed light on the factors contributing to crashes. Through this exploration, we seek to identify key variables such as weather conditions, road surfaces, vehicle types, and driver behaviors that play significant roles in accident occurrence and severity.\n\nUltimately, our aim is to use this knowledge to inform strategies and interventions that can enhance road safety and reduce the frequency and severity of motor vehicle collisions. By providing insights into the root causes and contributing factors of accidents, we aspire to empower policymakers, law enforcement agencies, and community stakeholders with the information they need to implement effective measures for preventing accidents and safeguarding lives on the roads of Montgomery County.\n:::\n\n## Research Questions : \n\n## Visualization1 : What are the trends in the frequency of car crashes over years?\n\n```{r ,message = FALSE ,echo=FALSE}\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read data and remove missing values\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data)\n\n# Convert Crash_Date to a Date format\ndata$Crash_Date <- as.Date(data$Crash.Date.Time, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Extract year from Crash_Date\ndata$Year <- format(data$Crash_Date, \"%Y\")\n\n# Group the data by year and count the number of crashes\nyearly_crash_count <- data %>%\n  group_by(Year) %>%\n  summarise(Num_Crashes = n())\n\n# Provided data\nyearly_crash_data <- data.frame(\n  Year = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\"),\n  Num_Crashes = c(20268, 21783, 21537, 21035, 20943, 13798, 16210, 17577, 18913, 7))\n\nplotly::plot_ly(yearly_crash_data, x = ~Year, y = ~Num_Crashes, type = 'bar', marker = list(color = 'rgb(139, 0, 0)')) %>%\n  plotly::layout(title = \"Crash Frequency per Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Number of Crashes\", tickformat = \",\"),\n         xaxis2 = list(tickangle = 45, tickmode = 'linear'))\n```\n\n<details>\n\n<summary>Code</summary>\n\n```{r ,message = FALSE}\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read data and remove missing values\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data)\n\n# Convert Crash_Date to a Date format\ndata$Crash_Date <- as.Date(data$Crash.Date.Time, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Extract year from Crash_Date\ndata$Year <- format(data$Crash_Date, \"%Y\")\n\n# Group the data by year and count the number of crashes\nyearly_crash_count <- data %>%\n  group_by(Year) %>%\n  summarise(Num_Crashes = n())\n\n# Provided data\nyearly_crash_data <- data.frame(\n  Year = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\"),\n  Num_Crashes = c(20268, 21783, 21537, 21035, 20943, 13798, 16210, 17577, 18913, 7))\n\nplot1 = plot_ly(yearly_crash_data, x = ~Year, y = ~Num_Crashes, type = 'bar', marker = list(color = 'rgb(139, 0, 0)')) %>%\n  layout(title = \"Crash Frequency per Year\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Number of Crashes\", tickformat = \",\"),\n         xaxis2 = list(tickangle = 45, tickmode = 'linear'))\n#plot1\n```\n\n</details>\n\n<details>\n\n<summary>Columns Used</summary>\n\n**Columns Used:**\n\n-   **`Crash_Date`**:\n\n    -   **Rationale for Use**: The specific date and time of each crash incident are crucial for temporal analysis and trend identification.\n\n-   **`Year`** (Derived from **`Crash_Date`**):\n\n    -   **Rationale for Use**: Grouping the data by year enables the identification of yearly patterns and trends in crash occurrences.\n\n-   **`Num_Crashes`** (Derived from counting the number of records for each year):\n\n    -   **Rationale for Use**: Quantifying the crash frequency provides a clear measure for understanding the magnitude of road accidents over time.\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Explanation of the Code:** This visualizes the frequency of crashes per year using ggplot2 in R. Initially, it converts the \"Crash_Date\" column into a date format and extracts the year from it. Then, it groups the data by year and calculates the number of crashes that occurred each year.\n:::\n\n## hypo#1. is there any relation between weather condition, day light and injury severity\n\nThe code you provided performs a chi-square test of independence to determine whether there is a statistically significant association between weather condition, light condition, and injury severity in traffic accidents. Here's an explanation of why this test was conducted and what was observed:\n\n**Chi-Square Test of Independence**: The chi-square test is a statistical test used to determine whether there is a significant association between two categorical variables. In this case, the variables of interest are weather condition, light condition, and injury severity.\n\n**Observation**: By analyzing the contingency table generated from the data, which shows the frequency distribution of the combinations of weather condition, light condition, and injury severity, we can observe the following:\n\n-   The contingency table provides counts of the number of accidents for each combination of weather condition, light condition, and injury severity.\n\n-   The chi-square test is then applied to assess whether these variables are independent of each other or if there is a relationship between them.\n\n![](images/h1.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Contingency table of Weather, Light, and Injury Severity\ncontingency_table <- table(data$Weather, data$Light, data$Injury.Severity)\n\n# Remove any empty dimensions\ncontingency_table <- margin.table(contingency_table, c(1, 2))\n\n\n# Chi-square test of independence\nchi_square_test <- chisq.test(contingency_table)\n\n# Print the test results\nprint(chi_square_test)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question is asking if there's any relationship between weather conditions, daylight, and injury severity in accidents. To analyze this, a Pearson's Chi-squared test was conducted on the contingency table. The output indicates a significant relationship between these variables, with a very low p-value (p \\< 2.2e-16). This suggests that the observed frequencies of injury severity across different weather conditions and daylight statuses are unlikely to have occurred by chance alone, indicating a strong association between these factors.\n:::\n\n\n## Per#1: Can we predict the severity of injuries based on various factors such as weather conditions, road surface conditions, and collision type?\n\n#### Fit random forest model\n\n![](images/1%20model.png)\n\n\\####\n\n<details>\n\n<summary>Random Forest Model Code</summary>\n\n```{r,message = FALSE}\nselect_cols=c('Weather','Surface.Condition','Collision.Type','Injury.Severity')\ninjury_data = data[select_cols]\n\ninjury_data = injury_data[complete.cases(injury_data), ]\n\n```\n\n```{r,message = FALSE}\ninjury_data[injury_data == 'N/A'] = NA\n\ninjury_data = na.omit(injury_data)\n\n## print(sum(is.na(injury_data)))\n\n```\n\n```{r,message = FALSE}\ninjury_data[injury_data == ''] = NA\n\ninjury_data = na.omit(injury_data)\n\n## print(sum(is.na(injury_data)))\n\n```\n\n```{r,message = FALSE}\ninjury_data$Weather <- factor(injury_data$Weather)\ninjury_data$Surface.Condition <- factor(injury_data$Surface.Condition)\ninjury_data$Collision.Type <- factor(injury_data$Collision.Type)\ninjury_data$Injury.Severity <- factor(injury_data$Injury.Severity)\n```\n\n```{r,message = FALSE}\n# Load required library\nlibrary(randomForest)\nlibrary(caret)\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Split the data into training and testing sets\ntrain_indices <- createDataPartition(injury_data$Injury.Severity, p = 0.8, list = FALSE)\ntrain_data <- injury_data[train_indices, ]\ntest_data <- injury_data[-train_indices, ]\n# train_data\n# Fit random forest model\nrmodel <- randomForest(Injury.Severity ~ ., data = train_data, ntree = 500)\nprint(rmodel)\n```\n\n```{r,message = FALSE}\npredictions <- predict(rmodel, newdata = test_data)\n\n# Create confusion matrix\nconf_matrix <- table(predictions, test_data$Injury.Severity)\n\n# Calculate accuracy\naccuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)\n\n# Calculate precision\nprecision <- diag(conf_matrix) / rowSums(conf_matrix)\n\n# Calculate recall\nrecall <- diag(conf_matrix) / colSums(conf_matrix)\n\n# Calculate F1-score\nf1_score <- 2 * precision * recall / (precision + recall)\n\n# Print accuracy, precision, recall, and F1-score\n# print(paste(\"Accuracy:\", accuracy))\n# print(\"Precision:\")\n# print(precision)\n# print(\"Recall:\")\n# print(recall)\n# print(\"F1-score:\")\n# print(f1_score)\n\n# Print confusion matrix\n# print(\"Confusion Matrix:\")\n# print(conf_matrix)\n```\n\n```{r ,message = FALSE}\n# Evaluate the model using confusion matrix\nconf_matrix <- table(test_data$Injury.Severity, predictions)\n\n# Calculate accuracy\naccuracy <- sum(diag(conf_matrix)) / sum(conf_matrix)\n\n# Print accuracy\n# print(paste(\"Accuracy:\", accuracy))\n```\n\n```{r ,message = FALSE}\nimportance(rmodel)\n```\n\n```{r ,message = FALSE}\nvarImpPlot(rmodel)\n```\n\n</details>\n\n### Accuracy\n\n![](images/2.png)\n\n### Precision\n\n![](images/3%20.png)\n\n### Recall\n\n![](images/9.png)\n\n### f1_score\n\n![](images/4.png)\n\n### Confusion Matrix\n\n![](images/5.png)\n\n### Importance model\n\n![](images/6.png)\n\n### Graph:\n\n![](images/7.png)\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question aims to predict the severity of injuries resulting from collisions based on various factors such as weather conditions, road surface conditions, and collision types. The output is from a random forest classification model trained on a dataset (train_data). The model's accuracy is approximately 80.69%, indicating its ability to predict injury severity.\n\nThe confusion matrix shows how well the model predicts each class of injury severity. Precision, recall, and F1-score metrics provide further insight into the model's performance for each class. However, for certain classes like \"FATAL INJURY\", precision, recall, and F1-score are not defined (NaN), indicating that the model did not correctly predict any instances of that class.\n\nThe confusion matrix reveals the number of correct and incorrect predictions for each class. Additionally, the importance of variables in predicting injury severity is shown through MeanDecreaseGini values. In this case, \"Collision.Type\" has the highest importance, followed by \"Weather\" and \"Surface.Condition\".\n\nOverall, the output suggests that weather conditions, road surface conditions, and collision types are significant factors in predicting the severity of injuries resulting from collisions, with \"Collision.Type\" being the most important predictor.\n:::\n\n## visualization3 : Top 10 cars which involve in car cashes?\n\n```{r ,message = FALSE, echo=FALSE}\nvehicle_counts <- data %>%\n  group_by(Vehicle.Make) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) # Sort by count in descending order\n\n# Take the top N most common vehicle makes for better visualization\ntop_n <- 10 # You can adjust this value as needed\n\ntop_vehicle_counts <- vehicle_counts %>%\n  top_n(top_n, count)\n\n# Your data processing code remains unchanged\n# Plotting\nplot_ly(top_vehicle_counts, y = ~reorder(Vehicle.Make, count), x = ~count, type = 'bar', marker = list(color = 'skyblue')) %>%\n  layout(title = \"Top 10 Most Common Vehicle Makes in Accidents\",\n         xaxis = list(title = \"Vehicle Make\", tickfont = list(size = 14)),\n         yaxis = list(title = \"Number of Accidents\", tickfont = list(size = 14)),\n         margin = list(l = 50, r = 50, b = 100, t = 100),  # Adjust margins\n         barmode = 'group')\n```\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\nvehicle_counts <- data %>%\n  group_by(Vehicle.Make) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) # Sort by count in descending order\n\n# Take the top N most common vehicle makes for better visualization\ntop_n <- 10 # You can adjust this value as needed\n\ntop_vehicle_counts <- vehicle_counts %>%\n  top_n(top_n, count)\n\n# Your data processing code remains unchanged\n# Plotting\nplot2 = plot_ly(top_vehicle_counts, y = ~reorder(Vehicle.Make, count), x = ~count, type = 'bar', marker = list(color = 'skyblue')) %>%\n  layout(title = \"Top 10 Most Common Vehicle Makes in Accidents\",\n         xaxis = list(title = \"Vehicle Make\", tickfont = list(size = 14)),\n         yaxis = list(title = \"Number of Accidents\", tickfont = list(size = 14)),\n         margin = list(l = 50, r = 50, b = 100, t = 100),  # Adjust margins\n         barmode = 'group')\n#plot2\n```\n\n</details>\n\n<details>\n\n<summary>Columns Used</summary>\n\n**Columns Used:**\n\n-   **Vehicle.Make**: This column is used to group the data by vehicle make, as we want to count the number of accidents for each vehicle make.\n\n-   **count**: This column is created using **`summarise()`** to count the number of accidents for each vehicle make group. It represents the frequency of accidents for each vehicle make.\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Explanation of the Code:** This generates a bar plot showing the top 10 most common vehicle makes involved in accidents, with vehicle make names on the y-axis and the number of accidents on the x-axis. It uses dplyr to summarize and arrange the data, then ggplot2 for visualization.\n:::\n\n\n## hypo#2. Are certain types of vehicles more likely to be involved in collisions at night compared to during the day?\n\nThe code aims to determine whether certain types of vehicles are more likely to be involved in collisions at night compared to during the day. Here's a clear interpretation of the analysis:\n\n1.  **Subset Data**: The dataset is divided into two subsets: collisions occurring during the day (**`collisions_day`**) and collisions occurring at night with lights on (**`collisions_night`**).\n\n2.  **Count Vehicle Types**: Counts of each vehicle type involved in collisions are calculated separately for day and night collisions.\n\n**Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant association between vehicle types and the time of the collision (day or night).\n\n![](images/h2.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Subset data for collisions during the day and at night\ncollisions_day <- subset(data, Light == \"DAYLIGHT\")\ncollisions_night <- subset(data, Light == \"DARK LIGHTS ON\")\n\n# Get the counts of each vehicle type for day and night collisions\ncounts_day <- table(collisions_day$Vehicle.Body.Type)\ncounts_night <- table(collisions_night$Vehicle.Body.Type)\n\n# Perform chi-square test of independence\nchi_square_test <- chisq.test(counts_day, counts_night)\n\n# Print the test results\nprint(chi_square_test)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question is investigating whether certain types of vehicles are more prone to being involved in collisions at night compared to during the day. To analyze this, a Pearson's Chi-squared test was conducted comparing the counts of collisions involving different types of vehicles during the day and at night. The output indicates that there is no significant difference in the distribution of collisions across different types of vehicles between day and night, with a p-value of 0.2408. This suggests that the likelihood of different types of vehicles being involved in collisions is similar during both day and night.\n:::\n\n## hypo#3. Do drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors?\n\nThe analysis aims to determine whether drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors. Here's a clear interpretation of the results:\n\n1.  **Data Subset**: The dataset is divided into two subsets: one for drivers distracted by electronic devices (**`electronic_distracted`**) and another for drivers distracted by other factors (**`other_distracted`**).\n\n2.  **Count Collisions**: The number of collisions is counted separately for drivers distracted by electronic devices and those distracted by other factors.\n\n3.  **Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant difference in collision rates between the two groups of drivers.\n\n![](images/h3.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Subset the data for drivers distracted by electronic devices\nelectronic_distracted <- subset(data, Driver.Distracted.By == \"ELECTRONIC DEVICE\")\n\n# Subset the data for drivers distracted by other factors\nother_distracted <- subset(data, Driver.Distracted.By != \"ELECTRONIC DEVICE\" & Driver.Distracted.By != \"NOT DISTRACTED\")\n\n# Count the number of collisions for each distraction type\ncounts_electronic <- nrow(electronic_distracted)\ncounts_other <- nrow(other_distracted)\n\n# Perform chi-square test\nchi_square_test <- chisq.test(c(counts_electronic, counts_other))\n\n# Print the test results\nprint(chi_square_test)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question aims to determine if drivers distracted by electronic devices have a higher collision rate compared to those distracted by other factors. To analyze this, a Chi-squared test was conducted comparing the collision counts between drivers distracted by electronic devices and those distracted by other factors. The output indicates a significant difference between the two groups, with a very low p-value (p \\< 2.2e-16). This suggests that drivers distracted by electronic devices indeed have a significantly higher collision rate compared to those distracted by other factors.\n:::\n\n## visualization2 : How does the distribution of car accidents vary geographically?\n\n```{r ,message = FALSE,echo=FALSE}\nlibrary(leaflet)\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data) \nmap <- leaflet(data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    popup = ~as.character(Report.Number),\n    label = ~as.character(Report.Number)\n  )\n\n# Print the map\nmap\n```\n\n<details>\n\n<summary>Code</summary>\n\n```{r}\nlibrary(leaflet)\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data) \nmap <- leaflet(data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    popup = ~as.character(Report.Number),\n    label = ~as.character(Report.Number)\n  )\n\n# Print the map\n# map\n```\n\n</details>\n\n<details>\n\n<summary>Columns Used</summary>\n\n**Columns Used:**\n\n-   **Longitude:** Longitude coordinates are essential for accurately positioning each incident on the map.\n\n-   **Latitude:** Latitude coordinates complement longitude for precise incident mapping.\n\n-   **Report.Number:** Each incident is uniquely identified by a report number, facilitating individual incident reference and tracking.\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Explanation of the Code:** This utilizes the Leaflet package in R to generate an interactive map. It begins by loading Leaflet and then initializes a map object. Using latitude and longitude data from a dataframe named 'data', it places circle markers on the map to represent specific locations, like crash sites. Each marker includes a popup and label showing the associated report number. Finally, it prints the interactive map, allowing users to explore the locations and corresponding report numbers within the R environment.\n:::\n\n## per#2: Can we predict the extent of vehicle damage in collisions based on collision type, vehicle movement, and speed limit?\n\n### Accuracy :\n\n![](images/WhatsApp%20Image%202024-05-03%20at%2011.24.47%20AM.jpeg){fig-align=\"center\"} \\###\n\n### Precision : ![](images/WhatsApp%20Image%202024-05-03%20at%2011.58.44%20AM.jpeg)\n\n### Recall : ![](images/WhatsApp%20Image%202024-05-03%20at%2011.58.44%20AM%20(1).jpeg)\n\n### F1_score : ![](images/WhatsApp%20Image%202024-05-03%20at%2011.58.43%20AM.jpeg)\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\nlibrary(randomForest)\nlibrary(caret)\n\n# Assuming your dataset is named 'data'\n\n# Select relevant columns for modeling\nselected_cols <- c(\"Collision.Type\", \"Vehicle.Movement\", \"Speed.Limit\", \"Vehicle.Damage.Extent\")\n\n# Subset the data\nvehicle_damage <- data[selected_cols]\nvehicle_damage=na.omit(vehicle_damage)\n\nvehicle_damage[vehicle_damage == \"N/A\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\n# Replace blank values with NA\nvehicle_damage[vehicle_damage == \"\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\nvehicle_damage$Collision.Type <- as.factor(vehicle_damage$Collision.Type)\nvehicle_damage$Vehicle.Movement <- as.factor(vehicle_damage$Vehicle.Movement)\nvehicle_damage$Vehicle.Damage.Extent <- as.factor(vehicle_damage$Vehicle.Damage.Extent)\n\nset.seed(123)  # For reproducibility\ntrain_indices <- createDataPartition(vehicle_damage$Vehicle.Damage.Extent, p = 0.8, list = FALSE)\ntrain_data <- vehicle_damage[train_indices, ]\ntest_data <- vehicle_damage[-train_indices, ]\n\nlibrary('rpart')\n# Train the decision tree model\nd_model <- rpart(Vehicle.Damage.Extent ~ ., data = train_data, method = \"class\")\n\n# Make predictions on the test set\npredictions <- predict(d_model, newdata = test_data, type = \"class\")\n\n# Calculate accuracy\naccuracy <- mean(predictions == test_data$Vehicle.Damage.Extent)\n\n# Calculate precision, recall, and F1-score using the confusion matrix\nconf_matrix <- table(predictions, test_data$Vehicle.Damage.Extent)\nprecision <- diag(conf_matrix) / rowSums(conf_matrix)\nrecall <- diag(conf_matrix) / colSums(conf_matrix)\nf1_score <- 2 * precision * recall / (precision + recall)\n\nprint(paste(\"Accuracy:\", accuracy))\nprint(\"Precision:\")\nprint(precision)\nprint(\"Recall:\")\nprint(recall)\nprint(\"F1-score:\")\nprint(f1_score)\n\n# Print confusion matrix\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\n```\n\n</details>\n\n### Graph :\n\n![](images/pd2.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\nlibrary('rpart.plot')\nprp(d_model, type = 2, extra = 1, branch = 0.6)\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The output shows the performance of a model that predicts the extent of vehicle damage in collisions. It's about 45% accurate overall. The model is better at predicting certain types of damage, like \"DISABLING,\" but not so good at others, like \"DESTROYED\" or \"NO DAMAGE.\" The confusion matrix gives details on predictions versus actual outcomes. The most crucial factors for prediction are collision type, vehicle movement, and speed limit. Collision type is the most important, followed by vehicle movement and speed limit.\n:::\n\n## hypo#4: Can we determine the effectiveness of different traffic control measures (Traffic.Control) in reducing collision rates? Which types of traffic controls are most effective in preventing collisions?\n\n![](images/h4.png){width=\"1000\"}\n\n### Graph :\n\n![](images/hy4.png){width=\"1000\"}\n\n<details>\n\n<summary>Code</summary>\n\n```{r,message = FALSE}\n# Subset the dataset to include only the required columns\ntraffic_data <- data[, c(\"Traffic.Control\", \"Injury.Severity\")]\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\ntraffic_data[traffic_data == \"N/A\"] <- NA\n\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\n# Check if there are any missing values left\nprint(sum(is.na(traffic_data)))\ncollision_counts <- traffic_data %>%\n  group_by(Traffic.Control) %>%\n  summarise(Collision_Count = n())\n\n# Calculate collision rates for each traffic control type\ntotal_collisions <- nrow(traffic_data)\ncollision_rates <- collision_counts %>%\n  mutate(Collision_Rate = Collision_Count / total_collisions)\n\n# Statistical Analysis\n# Perform chi-square test to compare collision rates between different traffic controls\nchi_square_test <- chisq.test(traffic_data$Traffic.Control, traffic_data$Injury.Severity)\n\n# Visualization\npar(mfrow=c(1, 2))  # Set up a 1x2 plotting grid\n\n# Create a bar plot using ggplot2\nggplot(collision_counts, aes(x = reorder(Traffic.Control, -Collision_Count), y = Collision_Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Collision Counts by Traffic Control Type\",\n       x = \"Traffic Control Type\",\n       y = \"Collision Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n</details>\n\n::: {style=\"text-align:justify\"}\n**Interpretation of Results**: The question investigates whether different types of traffic control measures are effective in reducing collision rates and which ones are most effective. To analyze this, a Pearson's Chi-squared test was conducted between the types of traffic control measures and the severity of injuries resulting from collisions. The output shows a significant relationship between the two variables, with a very low p-value (p \\< 2.2e-16). This suggests that the effectiveness of traffic control measures in preventing collisions varies significantly across different types. However, further analysis would be needed to determine which specific types of traffic controls are most effective in reducing collision rates and severity of injuries.\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":{"code_folding":"hide"}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"css":["styles.css"],"output-file":"Final Project.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","theme":"Flatly","title":"Final Project","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}