{"title":"Final Project","markdown":{"yaml":{"title":"Final Project","format":"html","editor":"visual"},"headingText":"Read data and remove missing values","containsRefs":false,"markdown":"\n\n\nStat-515-002 (Spring 2024)\n\n***Group Number: 14***\n\nVisluzations1 : crash frequency per year\n\n![](images/WhatsApp Image 2024-05-01 at 4.39.04 PM (1)-02.jpeg){width=\"1000\"}\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data)\n\n# Convert Crash.Date.Time to POSIXct format\ndate_time <- as.POSIXct(data$Crash.Date.Time, format = \"%m/%d/%Y %H:%M\")\ndate_only <- as.Date(date_time)\n\n# Extract day of the week and add it to the data frame\nday_of_week <- weekdays(date_only)\ndata$day_of_week <- day_of_week\n\n# Convert Crash_Date to a Date format\ndata$Crash_Date <- as.Date(data$Crash.Date.Time, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Extract year from Crash_Date\ndata$Year <- format(data$Crash_Date, \"%Y\")\n\n# Group the data by year and count the number of crashes\nyearly_crash_count <- data %>%\n  group_by(Year) %>%\n  summarise(Num_Crashes = n())\n\n# Provided data\nyearly_crash_data <- data.frame(\n  Year = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\"),\n  Num_Crashes = c(20268, 21783, 21537, 21035, 20943, 13798, 16210, 17577, 18913, 7)\n)\n\nggplot(yearly_crash_data, aes(x = Year, y = Num_Crashes)) +\n  geom_col(fill = \"red\", width = 0.5) +\n  labs(x = \"Year\", y = \"Number of Crashes\", title = \"Crash Frequency per Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::comma)  # Format y-axis labels with commas\n```\n\n**Columns Used:**\n\n-   **`Crash_Date`**:\n\n    -   **Rationale for Use**: The specific date and time of each crash incident are crucial for temporal analysis and trend identification.\n\n-   **`Year`** (Derived from **`Crash_Date`**):\n\n    -   **Rationale for Use**: Grouping the data by year enables the identification of yearly patterns and trends in crash occurrences.\n\n-   **`Num_Crashes`** (Derived from counting the number of records for each year):\n\n    -   **Rationale for Use**: Quantifying the crash frequency provides a clear measure for understanding the magnitude of road accidents over time.\n\n**Rationale for Using These Columns:**\n\nThe choice of **`Crash_Date`**, **`Year`** (derived from **`Crash_Date`**), and **`Num_Crashes`** is deliberate, aiming to capture key aspects of road accident dynamics in Montgomery County. **`Crash_Date`** provides a temporal dimension, vital for spotting trends and seasonal variations in accidents, guiding policy interventions. Derived from **`Crash_Date`**, **`Year`** facilitates grouping data into yearly intervals, offering a high-level view of crash frequency trends crucial for long-term planning. Complementing this, **`Num_Crashes`** quantifies accident frequency, serving as a benchmark for evaluating safety initiatives and identifying areas needing intervention.\n\n**Explanation of the Code:**\n\nThe code navigates the dataset methodically, starting with standardizing **`Crash_Date`** for temporal analysis. Deriving **`Year`** from **`Crash_Date`** enables grouping by year for trend assessment. Utilizing **`dplyr`**, it aggregates data by year, computing crash counts (**`Num_Crashes`**) to synthesize insights. Preparing **`yearly_crash_data`** sets the stage for visualization, while **`ggplot2`** crafts a visually engaging bar plot of crash frequency per year. This systematic approach transforms raw data into actionable insights, empowering stakeholders with the information needed for effective road safety initiatives.\n\nvisulization 2 : Map showing accident frequencies\n\n```{r}\nlibrary(leaflet)\n\nmap <- leaflet(data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    popup = ~as.character(Report.Number),\n    label = ~as.character(Report.Number)\n  )\n\n# Print the map\nmap\n```\n\n1.  **Library Import**: The code begins by importing the **`leaflet`** library, which provides functions for creating interactive maps.\n\n2.  **Map Initialization**: The **`leaflet()`** function initializes a leaflet map object.\n\n3.  **Adding Tiles**: The **`addTiles()`** function adds default OpenStreetMap tiles to the map. These tiles provide the base layer for the map.\n\n4.  **Adding Circle Markers**: The **`addCircleMarkers()`** function adds circular markers to the map. Each marker represents a specific location specified by its longitude and latitude coordinates.\n\n    -   **`lng = ~Longitude`**: Specifies the longitude coordinates of the markers, extracted from the **`Longitude`** column of the **`data`** dataframe.\n\n    -   **`lat = ~Latitude`**: Specifies the latitude coordinates of the markers, extracted from the **`Latitude`** column of the **`data`** dataframe.\n\n    -   **`popup = ~as.character(Report.Number)`**: Specifies the content of the pop-up windows that appear when markers are clicked. In this case, it displays the **`Report.Number`** converted to a character format.\n\n    -   **`label = ~as.character(Report.Number)`**: Specifies the text labels that appear on the markers. In this case, it also displays the **`Report.Number`**.\n\n5.  **Print the Map**: Finally, the **`map`** object is printed, which renders the interactive map containing the added tiles and circle markers.\n\nvisulization3 : Most car accidents\n\n![](images/v3.png){width=\"685\"}\n\n```{r}\nvehicle_counts <- data %>%\n  group_by(Vehicle.Make) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) # Sort by count in descending order\n\n# Take the top N most common vehicle makes for better visualization\ntop_n <- 10 # You can adjust this value as needed\n\ntop_vehicle_counts <- vehicle_counts %>%\n  top_n(top_n, count)\n\n# Your data processing code remains unchanged\n# Plotting\nggplot(top_vehicle_counts, aes(x = reorder(Vehicle.Make, count), y = count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Top 50 Most Common Vehicle Makes in Accidents\",\n       x = \"Vehicle Make\",\n       y = \"Number of Accidents\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Increase font size of x-axis labels\n        axis.text.y = element_text(size = 8)) +  # Increase font size of y-axis labels\n  coord_flip() +\n  theme(plot.margin = unit(c(1, 3, 1, 1), \"cm\")) \n```\n\n-   **Vehicle.Make**: This column is used to group the data by vehicle make, as we want to count the number of accidents for each vehicle make.\n\n-   **count**: This column is created using **`summarise()`** to count the number of accidents for each vehicle make group. It represents the frequency of accidents for each vehicle make.\n\n    These columns are essential for generating a bar plot that visualizes the top N most common vehicle makes involved in accidents. The plot provides insights into which vehicle makes are most frequently involved in accidents, aiding in understanding accident patterns and potentially informing safety measures or interventions.\n\nHypothesis:\n\n### 1. is there any relation between weather condition, day light and injury seviarity\n\nThe code you provided performs a chi-square test of independence to determine whether there is a statistically significant association between weather condition, light condition, and injury severity in traffic accidents. Here's an explanation of why this test was conducted and what was observed:\n\n**Chi-Square Test of Independence**: The chi-square test is a statistical test used to determine whether there is a significant association between two categorical variables. In this case, the variables of interest are weather condition, light condition, and injury severity.\n\n**Observation**: By analyzing the contingency table generated from the data, which shows the frequency distribution of the combinations of weather condition, light condition, and injury severity, we can observe the following:\n\n-   The contingency table provides counts of the number of accidents for each combination of weather condition, light condition, and injury severity.\n\n-   The chi-square test is then applied to assess whether these variables are independent of each other or if there is a relationship between them.\n\n    ```{r}\n    # Contingency table of Weather, Light, and Injury Severity\n    contingency_table <- table(data$Weather, data$Light, data$Injury.Severity)\n\n    # Remove any empty dimensions\n    contingency_table <- margin.table(contingency_table, c(1, 2))\n\n\n    # Chi-square test of independence\n    chi_square_test <- chisq.test(contingency_table)\n\n    # Print the test results\n    print(chi_square_test)\n    ```\n\n**Test Results**:\n\n-   The chi-square test calculates a chi-square statistic and a corresponding p-value.\n\n-   The null hypothesis for the chi-square test is that there is no association between the variables (i.e., they are independent).\n\n-   The alternative hypothesis is that there is an association between the variables (i.e., they are not independent).\n\n-   A low p-value (typically below a significance level, such as 0.05) indicates that the observed association between the variables is statistically significant, suggesting that they are not independent.\n\n**Interpretation**:\n\nIn this case, the chi-square test results indicate a statistically significant association between weather condition, light condition, and injury severity, with a chi-square value of 31341 and a very low p-value (typically denoted as less than 0.05 or 2.2e-16 in this case).\n\nThis suggests that there is a relationship between these variables. In other words, weather condition and light condition are not independent of injury severity in traffic accidents.\n\n### 2. Are certain types of vehicles more likely to be involved in collisions at night compared to during the day?\n\nThe code aims to determine whether certain types of vehicles are more likely to be involved in collisions at night compared to during the day. Here's a clear interpretation of the analysis:\n\n1.  **Subset Data**: The dataset is divided into two subsets: collisions occurring during the day (**`collisions_day`**) and collisions occurring at night with lights on (**`collisions_night`**).\n\n2.  **Count Vehicle Types**: Counts of each vehicle type involved in collisions are calculated separately for day and night collisions.\n\n3.  **Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant association between vehicle types and the time of the collision (day or night).\n\n    ```{r}\n    # Subset data for collisions during the day and at night\n    collisions_day <- subset(data, Light == \"DAYLIGHT\")\n    collisions_night <- subset(data, Light == \"DARK LIGHTS ON\")\n\n    # Get the counts of each vehicle type for day and night collisions\n    counts_day <- table(collisions_day$Vehicle.Body.Type)\n    counts_night <- table(collisions_night$Vehicle.Body.Type)\n\n    # Perform chi-square test of independence\n    chi_square_test <- chisq.test(counts_day, counts_night)\n\n    # Print the test results\n    print(chi_square_test)\n    ```\n\n    **Interpretation of Results**: The result of the chi-square test indicates that the difference in the distribution of vehicle types between day and night collisions is not statistically significant (p-value = 0.2408, df = 930). Therefore, we fail to reject the null hypothesis, suggesting that there is no evidence to conclude that certain types of vehicles are more likely to be involved in collisions at night compared to during the day.\n\n### 3. Do drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors?\n\nThe analysis aims to determine whether drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors. Here's a clear interpretation of the results:\n\n1.  **Data Subset**: The dataset is divided into two subsets: one for drivers distracted by electronic devices (**`electronic_distracted`**) and another for drivers distracted by other factors (**`other_distracted`**).\n\n2.  **Count Collisions**: The number of collisions is counted separately for drivers distracted by electronic devices and those distracted by other factors.\n\n3.  **Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant difference in collision rates between the two groups of drivers.\n\n    ```{r}\n    # Subset the data for drivers distracted by electronic devices\n    electronic_distracted <- subset(data, Driver.Distracted.By == \"ELECTRONIC DEVICE\")\n\n    # Subset the data for drivers distracted by other factors\n    other_distracted <- subset(data, Driver.Distracted.By != \"ELECTRONIC DEVICE\" & Driver.Distracted.By != \"NOT DISTRACTED\")\n\n    # Count the number of collisions for each distraction type\n    counts_electronic <- nrow(electronic_distracted)\n    counts_other <- nrow(other_distracted)\n\n    # Perform chi-square test\n    chi_square_test <- chisq.test(c(counts_electronic, counts_other))\n\n    # Print the test results\n    print(chi_square_test)\n    ```\n\n**Interpretation of Results**: The chi-square test results suggest that there is a statistically significant difference in collision rates between drivers distracted by electronic devices and drivers distracted by other factors. This indicates that drivers distracted by electronic devices are more likely to be involved in collisions compared to those distracted by other factors.\n\nhypo#4: Can we determine the effectiveness of different traffic control measures (Traffic.Control) in reducing collision rates? Which types of traffic controls are most effective in preventing collisions?\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n# Subset the dataset to include only the required columns\ntraffic_data <- data[, c(\"Traffic.Control\", \"Injury.Severity\")]\n\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\n\n# Check the structure of the resulting dataframe\ntraffic_data[traffic_data == \"N/A\"] <- NA\n\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\ncollision_counts <- traffic_data %>%\n  group_by(Traffic.Control) %>%\n  summarise(Collision_Count = n())\n\n# Calculate collision rates for each traffic control type\ntotal_collisions <- nrow(traffic_data)\ncollision_rates <- collision_counts %>%\n  mutate(Collision_Rate = Collision_Count / total_collisions)\n\n# Statistical Analysis\n# Perform chi-square test to compare collision rates between different traffic controls\nchi_square_test <- chisq.test(traffic_data$Traffic.Control, traffic_data$Injury.Severity)\nprint(chi_square_test)\n```\n\nGraph :\n\n![](images/hy4.png){width=\"1000\"}\n\n```{r}\n# Visualization\npar(mfrow=c(1, 2))  # Set up a 1x2 plotting grid\n\n# Create a bar plot using ggplot2\nggplot(collision_counts, aes(x = reorder(Traffic.Control, -Collision_Count), y = Collision_Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Collision Counts by Traffic Control Type\",\n       x = \"Traffic Control Type\",\n       y = \"Collision Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n### Per#1: Can we predict the severity of injuries based on various factors such as weather conditions, road surface conditions, and collision type?\n\n### per#2: Can we predict the extent of vehicle damage in collisions based on collision type, vehicle movement, and speed limit?\n\n```{r}\nlibrary(randomForest)\nlibrary(caret)\n\n# Assuming your dataset is named 'data'\n\n# Select relevant columns for modeling\nselected_cols <- c(\"Collision.Type\", \"Vehicle.Movement\", \"Speed.Limit\", \"Vehicle.Damage.Extent\")\n\n# Subset the data\nvehicle_damage <- data[selected_cols]\nvehicle_damage=na.omit(vehicle_damage)\n\nvehicle_damage[vehicle_damage == \"N/A\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\n# Replace blank values with NA\nvehicle_damage[vehicle_damage == \"\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\nvehicle_damage$Collision.Type <- as.factor(vehicle_damage$Collision.Type)\nvehicle_damage$Vehicle.Movement <- as.factor(vehicle_damage$Vehicle.Movement)\nvehicle_damage$Vehicle.Damage.Extent <- as.factor(vehicle_damage$Vehicle.Damage.Extent)\n\nset.seed(123)  # For reproducibility\ntrain_indices <- createDataPartition(vehicle_damage$Vehicle.Damage.Extent, p = 0.8, list = FALSE)\ntrain_data <- vehicle_damage[train_indices, ]\ntest_data <- vehicle_damage[-train_indices, ]\n\nlibrary('rpart')\n# Train the decision tree model\nd_model <- rpart(Vehicle.Damage.Extent ~ ., data = train_data, method = \"class\")\n\n# Make predictions on the test set\npredictions <- predict(d_model, newdata = test_data, type = \"class\")\n\n# Calculate accuracy\naccuracy <- mean(predictions == test_data$Vehicle.Damage.Extent)\n\n# Calculate precision, recall, and F1-score using the confusion matrix\nconf_matrix <- table(predictions, test_data$Vehicle.Damage.Extent)\nprecision <- diag(conf_matrix) / rowSums(conf_matrix)\nrecall <- diag(conf_matrix) / colSums(conf_matrix)\nf1_score <- 2 * precision * recall / (precision + recall)\n\n\n```\n\n```{r}\nprint(paste(\"Accuracy:\", accuracy))\nprint(\"Precision:\")\nprint(precision)\nprint(\"Recall:\")\nprint(recall)\nprint(\"F1-score:\")\nprint(f1_score)\n\n# Print confusion matrix\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\n```\n\n```{r}\nlibrary('rpart.plot')\nprp(d_model, type = 2, extra = 1, branch = 0.6)\n```\n\nGraph: ![](images/pd2.png){width=\"1000\"}\n","srcMarkdownNoYaml":"\n\n## \n\nStat-515-002 (Spring 2024)\n\n***Group Number: 14***\n\nVisluzations1 : crash frequency per year\n\n![](images/WhatsApp Image 2024-05-01 at 4.39.04 PM (1)-02.jpeg){width=\"1000\"}\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Read data and remove missing values\ndata <- read.csv('/Users/manoharshasappa/Desktop/Stat_Final_project de/CrashReportingDriversData.csv')\ndata <- na.omit(data)\n\n# Convert Crash.Date.Time to POSIXct format\ndate_time <- as.POSIXct(data$Crash.Date.Time, format = \"%m/%d/%Y %H:%M\")\ndate_only <- as.Date(date_time)\n\n# Extract day of the week and add it to the data frame\nday_of_week <- weekdays(date_only)\ndata$day_of_week <- day_of_week\n\n# Convert Crash_Date to a Date format\ndata$Crash_Date <- as.Date(data$Crash.Date.Time, format = \"%m/%d/%Y %I:%M:%S %p\")\n\n# Extract year from Crash_Date\ndata$Year <- format(data$Crash_Date, \"%Y\")\n\n# Group the data by year and count the number of crashes\nyearly_crash_count <- data %>%\n  group_by(Year) %>%\n  summarise(Num_Crashes = n())\n\n# Provided data\nyearly_crash_data <- data.frame(\n  Year = c(\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\", \"2024\"),\n  Num_Crashes = c(20268, 21783, 21537, 21035, 20943, 13798, 16210, 17577, 18913, 7)\n)\n\nggplot(yearly_crash_data, aes(x = Year, y = Num_Crashes)) +\n  geom_col(fill = \"red\", width = 0.5) +\n  labs(x = \"Year\", y = \"Number of Crashes\", title = \"Crash Frequency per Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = scales::comma)  # Format y-axis labels with commas\n```\n\n**Columns Used:**\n\n-   **`Crash_Date`**:\n\n    -   **Rationale for Use**: The specific date and time of each crash incident are crucial for temporal analysis and trend identification.\n\n-   **`Year`** (Derived from **`Crash_Date`**):\n\n    -   **Rationale for Use**: Grouping the data by year enables the identification of yearly patterns and trends in crash occurrences.\n\n-   **`Num_Crashes`** (Derived from counting the number of records for each year):\n\n    -   **Rationale for Use**: Quantifying the crash frequency provides a clear measure for understanding the magnitude of road accidents over time.\n\n**Rationale for Using These Columns:**\n\nThe choice of **`Crash_Date`**, **`Year`** (derived from **`Crash_Date`**), and **`Num_Crashes`** is deliberate, aiming to capture key aspects of road accident dynamics in Montgomery County. **`Crash_Date`** provides a temporal dimension, vital for spotting trends and seasonal variations in accidents, guiding policy interventions. Derived from **`Crash_Date`**, **`Year`** facilitates grouping data into yearly intervals, offering a high-level view of crash frequency trends crucial for long-term planning. Complementing this, **`Num_Crashes`** quantifies accident frequency, serving as a benchmark for evaluating safety initiatives and identifying areas needing intervention.\n\n**Explanation of the Code:**\n\nThe code navigates the dataset methodically, starting with standardizing **`Crash_Date`** for temporal analysis. Deriving **`Year`** from **`Crash_Date`** enables grouping by year for trend assessment. Utilizing **`dplyr`**, it aggregates data by year, computing crash counts (**`Num_Crashes`**) to synthesize insights. Preparing **`yearly_crash_data`** sets the stage for visualization, while **`ggplot2`** crafts a visually engaging bar plot of crash frequency per year. This systematic approach transforms raw data into actionable insights, empowering stakeholders with the information needed for effective road safety initiatives.\n\nvisulization 2 : Map showing accident frequencies\n\n```{r}\nlibrary(leaflet)\n\nmap <- leaflet(data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    lng = ~Longitude,\n    lat = ~Latitude,\n    popup = ~as.character(Report.Number),\n    label = ~as.character(Report.Number)\n  )\n\n# Print the map\nmap\n```\n\n1.  **Library Import**: The code begins by importing the **`leaflet`** library, which provides functions for creating interactive maps.\n\n2.  **Map Initialization**: The **`leaflet()`** function initializes a leaflet map object.\n\n3.  **Adding Tiles**: The **`addTiles()`** function adds default OpenStreetMap tiles to the map. These tiles provide the base layer for the map.\n\n4.  **Adding Circle Markers**: The **`addCircleMarkers()`** function adds circular markers to the map. Each marker represents a specific location specified by its longitude and latitude coordinates.\n\n    -   **`lng = ~Longitude`**: Specifies the longitude coordinates of the markers, extracted from the **`Longitude`** column of the **`data`** dataframe.\n\n    -   **`lat = ~Latitude`**: Specifies the latitude coordinates of the markers, extracted from the **`Latitude`** column of the **`data`** dataframe.\n\n    -   **`popup = ~as.character(Report.Number)`**: Specifies the content of the pop-up windows that appear when markers are clicked. In this case, it displays the **`Report.Number`** converted to a character format.\n\n    -   **`label = ~as.character(Report.Number)`**: Specifies the text labels that appear on the markers. In this case, it also displays the **`Report.Number`**.\n\n5.  **Print the Map**: Finally, the **`map`** object is printed, which renders the interactive map containing the added tiles and circle markers.\n\nvisulization3 : Most car accidents\n\n![](images/v3.png){width=\"685\"}\n\n```{r}\nvehicle_counts <- data %>%\n  group_by(Vehicle.Make) %>%\n  summarise(count = n()) %>%\n  arrange(desc(count)) # Sort by count in descending order\n\n# Take the top N most common vehicle makes for better visualization\ntop_n <- 10 # You can adjust this value as needed\n\ntop_vehicle_counts <- vehicle_counts %>%\n  top_n(top_n, count)\n\n# Your data processing code remains unchanged\n# Plotting\nggplot(top_vehicle_counts, aes(x = reorder(Vehicle.Make, count), y = count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Top 50 Most Common Vehicle Makes in Accidents\",\n       x = \"Vehicle Make\",\n       y = \"Number of Accidents\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Increase font size of x-axis labels\n        axis.text.y = element_text(size = 8)) +  # Increase font size of y-axis labels\n  coord_flip() +\n  theme(plot.margin = unit(c(1, 3, 1, 1), \"cm\")) \n```\n\n-   **Vehicle.Make**: This column is used to group the data by vehicle make, as we want to count the number of accidents for each vehicle make.\n\n-   **count**: This column is created using **`summarise()`** to count the number of accidents for each vehicle make group. It represents the frequency of accidents for each vehicle make.\n\n    These columns are essential for generating a bar plot that visualizes the top N most common vehicle makes involved in accidents. The plot provides insights into which vehicle makes are most frequently involved in accidents, aiding in understanding accident patterns and potentially informing safety measures or interventions.\n\nHypothesis:\n\n### 1. is there any relation between weather condition, day light and injury seviarity\n\nThe code you provided performs a chi-square test of independence to determine whether there is a statistically significant association between weather condition, light condition, and injury severity in traffic accidents. Here's an explanation of why this test was conducted and what was observed:\n\n**Chi-Square Test of Independence**: The chi-square test is a statistical test used to determine whether there is a significant association between two categorical variables. In this case, the variables of interest are weather condition, light condition, and injury severity.\n\n**Observation**: By analyzing the contingency table generated from the data, which shows the frequency distribution of the combinations of weather condition, light condition, and injury severity, we can observe the following:\n\n-   The contingency table provides counts of the number of accidents for each combination of weather condition, light condition, and injury severity.\n\n-   The chi-square test is then applied to assess whether these variables are independent of each other or if there is a relationship between them.\n\n    ```{r}\n    # Contingency table of Weather, Light, and Injury Severity\n    contingency_table <- table(data$Weather, data$Light, data$Injury.Severity)\n\n    # Remove any empty dimensions\n    contingency_table <- margin.table(contingency_table, c(1, 2))\n\n\n    # Chi-square test of independence\n    chi_square_test <- chisq.test(contingency_table)\n\n    # Print the test results\n    print(chi_square_test)\n    ```\n\n**Test Results**:\n\n-   The chi-square test calculates a chi-square statistic and a corresponding p-value.\n\n-   The null hypothesis for the chi-square test is that there is no association between the variables (i.e., they are independent).\n\n-   The alternative hypothesis is that there is an association between the variables (i.e., they are not independent).\n\n-   A low p-value (typically below a significance level, such as 0.05) indicates that the observed association between the variables is statistically significant, suggesting that they are not independent.\n\n**Interpretation**:\n\nIn this case, the chi-square test results indicate a statistically significant association between weather condition, light condition, and injury severity, with a chi-square value of 31341 and a very low p-value (typically denoted as less than 0.05 or 2.2e-16 in this case).\n\nThis suggests that there is a relationship between these variables. In other words, weather condition and light condition are not independent of injury severity in traffic accidents.\n\n### 2. Are certain types of vehicles more likely to be involved in collisions at night compared to during the day?\n\nThe code aims to determine whether certain types of vehicles are more likely to be involved in collisions at night compared to during the day. Here's a clear interpretation of the analysis:\n\n1.  **Subset Data**: The dataset is divided into two subsets: collisions occurring during the day (**`collisions_day`**) and collisions occurring at night with lights on (**`collisions_night`**).\n\n2.  **Count Vehicle Types**: Counts of each vehicle type involved in collisions are calculated separately for day and night collisions.\n\n3.  **Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant association between vehicle types and the time of the collision (day or night).\n\n    ```{r}\n    # Subset data for collisions during the day and at night\n    collisions_day <- subset(data, Light == \"DAYLIGHT\")\n    collisions_night <- subset(data, Light == \"DARK LIGHTS ON\")\n\n    # Get the counts of each vehicle type for day and night collisions\n    counts_day <- table(collisions_day$Vehicle.Body.Type)\n    counts_night <- table(collisions_night$Vehicle.Body.Type)\n\n    # Perform chi-square test of independence\n    chi_square_test <- chisq.test(counts_day, counts_night)\n\n    # Print the test results\n    print(chi_square_test)\n    ```\n\n    **Interpretation of Results**: The result of the chi-square test indicates that the difference in the distribution of vehicle types between day and night collisions is not statistically significant (p-value = 0.2408, df = 930). Therefore, we fail to reject the null hypothesis, suggesting that there is no evidence to conclude that certain types of vehicles are more likely to be involved in collisions at night compared to during the day.\n\n### 3. Do drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors?\n\nThe analysis aims to determine whether drivers distracted by electronic devices have a higher rate of collisions compared to drivers distracted by other factors. Here's a clear interpretation of the results:\n\n1.  **Data Subset**: The dataset is divided into two subsets: one for drivers distracted by electronic devices (**`electronic_distracted`**) and another for drivers distracted by other factors (**`other_distracted`**).\n\n2.  **Count Collisions**: The number of collisions is counted separately for drivers distracted by electronic devices and those distracted by other factors.\n\n3.  **Chi-Square Test**: A chi-square test of independence is performed to assess whether there is a significant difference in collision rates between the two groups of drivers.\n\n    ```{r}\n    # Subset the data for drivers distracted by electronic devices\n    electronic_distracted <- subset(data, Driver.Distracted.By == \"ELECTRONIC DEVICE\")\n\n    # Subset the data for drivers distracted by other factors\n    other_distracted <- subset(data, Driver.Distracted.By != \"ELECTRONIC DEVICE\" & Driver.Distracted.By != \"NOT DISTRACTED\")\n\n    # Count the number of collisions for each distraction type\n    counts_electronic <- nrow(electronic_distracted)\n    counts_other <- nrow(other_distracted)\n\n    # Perform chi-square test\n    chi_square_test <- chisq.test(c(counts_electronic, counts_other))\n\n    # Print the test results\n    print(chi_square_test)\n    ```\n\n**Interpretation of Results**: The chi-square test results suggest that there is a statistically significant difference in collision rates between drivers distracted by electronic devices and drivers distracted by other factors. This indicates that drivers distracted by electronic devices are more likely to be involved in collisions compared to those distracted by other factors.\n\nhypo#4: Can we determine the effectiveness of different traffic control measures (Traffic.Control) in reducing collision rates? Which types of traffic controls are most effective in preventing collisions?\n\n```{r}\nlibrary(ggplot2)\nlibrary(dplyr)\n# Subset the dataset to include only the required columns\ntraffic_data <- data[, c(\"Traffic.Control\", \"Injury.Severity\")]\n\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\n\n# Check the structure of the resulting dataframe\ntraffic_data[traffic_data == \"N/A\"] <- NA\n\n# Remove rows with any missing values\ntraffic_data <- na.omit(traffic_data)\n\ncollision_counts <- traffic_data %>%\n  group_by(Traffic.Control) %>%\n  summarise(Collision_Count = n())\n\n# Calculate collision rates for each traffic control type\ntotal_collisions <- nrow(traffic_data)\ncollision_rates <- collision_counts %>%\n  mutate(Collision_Rate = Collision_Count / total_collisions)\n\n# Statistical Analysis\n# Perform chi-square test to compare collision rates between different traffic controls\nchi_square_test <- chisq.test(traffic_data$Traffic.Control, traffic_data$Injury.Severity)\nprint(chi_square_test)\n```\n\nGraph :\n\n![](images/hy4.png){width=\"1000\"}\n\n```{r}\n# Visualization\npar(mfrow=c(1, 2))  # Set up a 1x2 plotting grid\n\n# Create a bar plot using ggplot2\nggplot(collision_counts, aes(x = reorder(Traffic.Control, -Collision_Count), y = Collision_Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(title = \"Collision Counts by Traffic Control Type\",\n       x = \"Traffic Control Type\",\n       y = \"Collision Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n### Per#1: Can we predict the severity of injuries based on various factors such as weather conditions, road surface conditions, and collision type?\n\n### per#2: Can we predict the extent of vehicle damage in collisions based on collision type, vehicle movement, and speed limit?\n\n```{r}\nlibrary(randomForest)\nlibrary(caret)\n\n# Assuming your dataset is named 'data'\n\n# Select relevant columns for modeling\nselected_cols <- c(\"Collision.Type\", \"Vehicle.Movement\", \"Speed.Limit\", \"Vehicle.Damage.Extent\")\n\n# Subset the data\nvehicle_damage <- data[selected_cols]\nvehicle_damage=na.omit(vehicle_damage)\n\nvehicle_damage[vehicle_damage == \"N/A\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\n# Replace blank values with NA\nvehicle_damage[vehicle_damage == \"\"] <- NA\n\n# Remove rows with any missing values\nvehicle_damage <- na.omit(vehicle_damage)\n\nvehicle_damage$Collision.Type <- as.factor(vehicle_damage$Collision.Type)\nvehicle_damage$Vehicle.Movement <- as.factor(vehicle_damage$Vehicle.Movement)\nvehicle_damage$Vehicle.Damage.Extent <- as.factor(vehicle_damage$Vehicle.Damage.Extent)\n\nset.seed(123)  # For reproducibility\ntrain_indices <- createDataPartition(vehicle_damage$Vehicle.Damage.Extent, p = 0.8, list = FALSE)\ntrain_data <- vehicle_damage[train_indices, ]\ntest_data <- vehicle_damage[-train_indices, ]\n\nlibrary('rpart')\n# Train the decision tree model\nd_model <- rpart(Vehicle.Damage.Extent ~ ., data = train_data, method = \"class\")\n\n# Make predictions on the test set\npredictions <- predict(d_model, newdata = test_data, type = \"class\")\n\n# Calculate accuracy\naccuracy <- mean(predictions == test_data$Vehicle.Damage.Extent)\n\n# Calculate precision, recall, and F1-score using the confusion matrix\nconf_matrix <- table(predictions, test_data$Vehicle.Damage.Extent)\nprecision <- diag(conf_matrix) / rowSums(conf_matrix)\nrecall <- diag(conf_matrix) / colSums(conf_matrix)\nf1_score <- 2 * precision * recall / (precision + recall)\n\n\n```\n\n```{r}\nprint(paste(\"Accuracy:\", accuracy))\nprint(\"Precision:\")\nprint(precision)\nprint(\"Recall:\")\nprint(recall)\nprint(\"F1-score:\")\nprint(f1_score)\n\n# Print confusion matrix\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\n```\n\n```{r}\nlibrary('rpart.plot')\nprp(d_model, type = 2, extra = 1, branch = 0.6)\n```\n\nGraph: ![](images/pd2.png){width=\"1000\"}\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"Final Project.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","theme":"cosmo","title":"Final Project","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}